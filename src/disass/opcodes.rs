pub const NOP: usize = 0x00;
pub const MOVE: usize = 0x01;
pub const MOVEFROM16: usize = 0x02;
pub const MOVE16: usize = 0x03;
pub const MOVEWIDE: usize = 0x04;
pub const MOVEWIDEFROM16: usize = 0x05;
pub const MOVEWIDE16: usize = 0x06;
pub const MOVEOBJECT: usize = 0x07;
pub const MOVEOBJECTFROM16: usize = 0x08;
pub const MOVEOBJECT16: usize = 0x09;
pub const MOVERESULT: usize = 0x0a;
pub const MOVERESULTWIDE: usize = 0x0b;
pub const MOVERESULTOBJECT: usize = 0x0c;
pub const MOVEEXCEPTION: usize = 0x0d;
pub const RETURNVOID: usize = 0x0e;
pub const RETURN: usize = 0x0f;
pub const RETURNWIDE: usize = 0x10;
pub const RETURNOBJECT: usize = 0x11;
pub const CONST4: usize = 0x12;
pub const CONST16: usize = 0x13;
pub const CONST: usize = 0x14;
pub const CONSTHIGH16: usize = 0x15;
pub const CONSTWIDE16: usize = 0x16;
pub const CONSTWIDE32: usize = 0x17;
pub const CONSTWIDE: usize = 0x18;
pub const CONSTWIDEHIGH16: usize = 0x19;
pub const CONSTSTRING: usize = 0x1a;
pub const CONSTSTRINGJUMBO: usize = 0x1b;
pub const CONSTCLASS: usize = 0x1c;
pub const MONITORENTER: usize = 0x1d;
pub const MONITOREXIT: usize = 0x1e;
pub const CHECKCAST: usize = 0x1f;
pub const INSTANCEOF: usize = 0x20;
pub const ARRAYLENGTH: usize = 0x21;
pub const NEWINSTANCE: usize = 0x22;
pub const NEWARRAY: usize = 0x23;
pub const FILLEDNEWARRAY: usize = 0x24;
pub const FILLEDNEWARRAY_RANGE: usize = 0x25;
pub const FILLARRAYDATA: usize = 0x26;
pub const THROW: usize = 0x27;
pub const GOTO: usize = 0x28;
pub const GOTO_16: usize = 0x29;
pub const GOTO_32: usize = 0x2a;
pub const PACKEDSWITCH: usize = 0x2b;
pub const SPARSESWITCH: usize = 0x2c;
pub const CMPLFLOAT: usize = 0x2d;
pub const CMPGFLOAT: usize = 0x2e;
pub const CMPLDOUBLE: usize = 0x2f;
pub const CMPGDOUBLE: usize = 0x30;
pub const CMPLONG: usize = 0x31;
pub const IFEQ: usize = 0x32;
pub const IFNE: usize = 0x33;
pub const IFLT: usize = 0x34;
pub const IFGE: usize = 0x35;
pub const IFGT: usize = 0x36;
pub const IFLE: usize = 0x37;
pub const IFEQZ: usize = 0x38;
pub const IFNEZ: usize = 0x39;
pub const IFLTZ: usize = 0x3a;
pub const IFGEZ: usize = 0x3b;
pub const IFGTZ: usize = 0x3c;
pub const IFLEZ: usize = 0x3d;
pub const AGET: usize = 0x44;
pub const AGETWIDE: usize = 0x45;
pub const AGETOBJECT: usize = 0x46;
pub const AGETBOOLEAN: usize = 0x47;
pub const AGETBYTE: usize = 0x48;
pub const AGETCHAR: usize = 0x49;
pub const AGETSHORT: usize = 0x4a;
pub const APUT: usize = 0x4b;
pub const APUTWIDE: usize = 0x4c;
pub const APUTOBJECT: usize = 0x4d;
pub const APUTBOOLEAN: usize = 0x4e;
pub const APUTBYTE: usize = 0x4f;
pub const APUTCHAR: usize = 0x50;
pub const APUTSHORT: usize = 0x51;
pub const IGET: usize = 0x52;
pub const IGETWIDE: usize = 0x53;
pub const IGETOBJECT: usize = 0x54;
pub const IGETBOOLEAN: usize = 0x55;
pub const IGETBYTE: usize = 0x56;
pub const IGETCHAR: usize = 0x57;
pub const IGETSHORT: usize = 0x58;
pub const IPUT: usize = 0x59;
pub const IPUTWIDE: usize = 0x5a;
pub const IPUTOBJECT: usize = 0x5b;
pub const IPUTBOOLEAN: usize = 0x5c;
pub const IPUTBYTE: usize = 0x5d;
pub const IPUTCHAR: usize = 0x5e;
pub const IPUTSHORT: usize = 0x5f;
pub const SGET: usize = 0x60;
pub const SGETWIDE: usize = 0x61;
pub const SGETOBJECT: usize = 0x62;
pub const SGETBOOLEAN: usize = 0x63;
pub const SGETBYTE: usize = 0x64;
pub const SGETCHAR: usize = 0x65;
pub const SGETSHORT: usize = 0x66;
pub const SPUT: usize = 0x67;
pub const SPUTWIDE: usize = 0x68;
pub const SPUTOBJECT: usize = 0x69;
pub const SPUTBOOLEAN: usize = 0x6a;
pub const SPUTBYTE: usize = 0x6b;
pub const SPUTCHAR: usize = 0x6c;
pub const SPUTSHORT: usize = 0x6d;
pub const INVOKEVIRTUAL: usize = 0x6e;
pub const INVOKESUPER: usize = 0x6f;
pub const INVOKEDIRECT: usize = 0x70;
pub const INVOKESTATIC: usize = 0x71;
pub const INVOKEINTERFACE: usize = 0x72;
pub const INVOKEVIRTUAL_RANGE: usize = 0x74;
pub const INVOKESUPER_RANGE: usize = 0x75;
pub const INVOKEDIRECT_RANGE: usize = 0x76;
pub const INVOKESTATIC_RANGE: usize = 0x77;
pub const INVOKEINTERFACE_RANGE: usize = 0x78;
pub const NEGINT: usize = 0x7b;
pub const NOTINT: usize = 0x7c;
pub const NEGLONG: usize = 0x7d;
pub const NOTLONG: usize = 0x7e;
pub const NEGFLOAT: usize = 0x7f;
pub const NEGDOUBLE: usize = 0x80;
pub const INTTOLONG: usize = 0x81;
pub const INTTOFLOAT: usize = 0x82;
pub const INTTODOUBLE: usize = 0x83;
pub const LONGTOINT: usize = 0x84;
pub const LONGTOFLOAT: usize = 0x85;
pub const LONGTODOUBLE: usize = 0x86;
pub const FLOATTOINT: usize = 0x87;
pub const FLOATTOLONG: usize = 0x88;
pub const FLOATTODOUBLE: usize = 0x89;
pub const DOUBLETOINT: usize = 0x8a;
pub const DOUBLETOLONG: usize = 0x8b;
pub const DOUBLETOFLOAT: usize = 0x8c;
pub const INTTOBYTE: usize = 0x8d;
pub const INTTOCHAR: usize = 0x8e;
pub const INTTOSHORT: usize = 0x8f;
pub const ADDINT: usize = 0x90;
pub const SUBINT: usize = 0x91;
pub const MULINT: usize = 0x92;
pub const DIVINT: usize = 0x93;
pub const REMINT: usize = 0x94;
pub const ANDINT: usize = 0x95;
pub const ORINT: usize = 0x96;
pub const XORINT: usize = 0x97;
pub const SHLINT: usize = 0x98;
pub const SHRINT: usize = 0x99;
pub const USHRINT: usize = 0x9a;
pub const ADDLONG: usize = 0x9b;
pub const SUBLONG: usize = 0x9c;
pub const MULLONG: usize = 0x9d;
pub const DIVLONG: usize = 0x9e;
pub const REMLONG: usize = 0x9f;
pub const ANDLONG: usize = 0xa0;
pub const ORLONG: usize = 0xa1;
pub const XORLONG: usize = 0xa2;
pub const SHLLONG: usize = 0xa3;
pub const SHRLONG: usize = 0xa4;
pub const USHRLONG: usize = 0xa5;
pub const ADDFLOAT: usize = 0xa6;
pub const SUBFLOAT: usize = 0xa7;
pub const MULFLOAT: usize = 0xa8;
pub const DIVFLOAT: usize = 0xa9;
pub const REMFLOAT: usize = 0xaa;
pub const ADDDOUBLE: usize = 0xab;
pub const SUBDOUBLE: usize = 0xac;
pub const MULDOUBLE: usize = 0xad;
pub const DIVDOUBLE: usize = 0xae;
pub const REMDOUBLE: usize = 0xaf;
pub const ADDINT_2ADDR: usize = 0xb0;
pub const SUBINT_2ADDR: usize = 0xb1;
pub const MULINT_2ADDR: usize = 0xb2;
pub const DIVINT_2ADDR: usize = 0xb3;
pub const REMINT_2ADDR: usize = 0xb4;
pub const ANDINT_2ADDR: usize = 0xb5;
pub const ORINT_2ADDR: usize = 0xb6;
pub const XORINT_2ADDR: usize = 0xb7;
pub const SHLINT_2ADDR: usize = 0xb8;
pub const SHRINT_2ADDR: usize = 0xb9;
pub const USHRINT_2ADDR: usize = 0xba;
pub const ADDLONG_2ADDR: usize = 0xbb;
pub const SUBLONG_2ADDR: usize = 0xbc;
pub const MULLONG_2ADDR: usize = 0xbd;
pub const DIVLONG_2ADDR: usize = 0xbe;
pub const REMLONG_2ADDR: usize = 0xbf;
pub const ANDLONG_2ADDR: usize = 0xc0;
pub const ORLONG_2ADDR: usize = 0xc1;
pub const XORLONG_2ADDR: usize = 0xc2;
pub const SHLLONG_2ADDR: usize = 0xc3;
pub const SHRLONG_2ADDR: usize = 0xc4;
pub const USHRLONG_2ADDR: usize = 0xc5;
pub const ADDFLOAT_2ADDR: usize = 0xc6;
pub const SUBFLOAT_2ADDR: usize = 0xc7;
pub const MULFLOAT_2ADDR: usize = 0xc8;
pub const DIVFLOAT_2ADDR: usize = 0xc9;
pub const REMFLOAT_2ADDR: usize = 0xca;
pub const ADDDOUBLE_2ADDR: usize = 0xcb;
pub const SUBDOUBLE_2ADDR: usize = 0xcc;
pub const MULDOUBLE_2ADDR: usize = 0xcd;
pub const DIVDOUBLE_2ADDR: usize = 0xce;
pub const REMDOUBLE_2ADDR: usize = 0xcf;
pub const ADDINT_LIT16: usize = 0xd0;
pub const RSUBINT: usize = 0xd1;
pub const MULINT_LIT16: usize = 0xd2;
pub const DIVINT_LIT16: usize = 0xd3;
pub const REMINT_LIT16: usize = 0xd4;
pub const ANDINT_LIT16: usize = 0xd5;
pub const ORINT_LIT16: usize = 0xd6;
pub const XORINT_LIT16: usize = 0xd7;
pub const ADDINT_LIT8: usize = 0xd8;
pub const RSUBINT_LIT8: usize = 0xd9;
pub const MULINT_LIT8: usize = 0xda;
pub const DIVINT_LIT8: usize = 0xdb;
pub const REMINT_LIT8: usize = 0xdc;
pub const ANDINT_LIT8: usize = 0xdd;
pub const ORINT_LIT8: usize = 0xde;
pub const XORINT_LIT8: usize = 0xdf;
pub const SHLINT_LIT8: usize = 0xe0;
pub const SHRINT_LIT8: usize = 0xe1;
pub const USHRINT_LIT8: usize = 0xe2;
pub const INVOKEPOLYMORPHIC: usize = 0xfa;
pub const INVOKEPOLYMORPHIC_RANGE: usize = 0xfb;
pub const INVOKE_CUSTOM: usize = 0xfc;
pub const INVOKE_CUSTOM_RANGE: usize = 0xfd;
